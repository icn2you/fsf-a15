{"version":3,"sources":["components/Score/index.js","components/Navbar/index.js","components/Jumbotron/index.js","components/Header/index.js","components/Main/index.js","components/Footer/index.js","components/Pokemon/index.js","App.js","index.js"],"names":["Score","props","id","className","score","topScore","Navbar","msg","Jumbotron","Header","Main","children","Footer","class","href","target","rel","Pokemon","src","img","alt","name","clicked","toString","onClick","handleClick","App","shuffle","arr","shuffledArr","i","length","j","Math","floor","random","setState","resetGameState","state","game","updatedGame","handleScoreIncrease","pokemon","pokemonArr","map","Object","assign","pokemonName","message","userMsg","gameScore","userTopScore","max","pokemonImgs","this","key","image","bind","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c8cbdb55.chunk.js","sourcesContent":["import React from 'react';\nimport './style.css';\n\nfunction Score(props) {\n  return (\n    <span id=\"game-score\" className=\"align-bottom\">\n      Score: {props.score} | Top Score: {props.topScore}\n    </span>\n  );\n}\n\nexport default Score;\n","import React from 'react';\nimport Score from '../Score';\nimport './style.css';\n\nexport function Navbar(props) {\n  return (\n    <nav className=\"container-fluid fixed-top\">\n      <div className=\"row pt-3 pb-3\">\n        <div className=\"col text-left\">\n          <span id=\"game-brand\" className=\"align-bottom\">\n            Pokéclick Game\n          </span>\n        </div>\n        <div className=\"col text-center\">\n          <span id=\"game-msg\" className=\"align-bottom\">\n            {props.msg}\n          </span>    \n        </div>\n        <div className=\"col text-right\">\n          <Score\n            score={props.score}\n            topScore={props.topScore}\n          />\n        </div>  \n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import React from 'react';\nimport './style.css';\n\nfunction Jumbotron() {\n  return (\n    <div className=\"jumbotron jumbotron-fluid bg-danger\">\n      <div className=\"container text-center\">\n        <h1 className=\"display-4 mt-5\">Clicky Game!</h1>\n        <p className=\"lead\">\n          Click on any Pokémon to begin. Continue clicking Pokémon. For each unique Pokémon clicked, you earn five points.<br />Click a Pokémon more than once, you lose the game. Manage to click on every Pokémon no more than once, you win. Let's get a clickin'!\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from 'react';\nimport Navbar from '../Navbar';\nimport Jumbotron from '../Jumbotron';\nimport './style.css';\n\nfunction Header(props) {\n  return (\n    <header>\n      <Navbar \n        score={props.score}\n        topScore={props.topScore}\n        msg={props.msg}\n      />\n      <Jumbotron />\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport './style.css';\n\nfunction Main(props) {\n  return <main className=\"container mb-4 text-center\">{props.children}</main>;\n}\n\nexport default Main;\n","import React from 'react';\nimport './style.css';\n\nfunction Footer() {\n  return (\n    <footer>\n      <div className=\"container-fluid text-center\">\n        <div id=\"copyright\">\n          <i className=\"fab fa-react fa-lg\"></i>&nbsp;&nbsp;&nbsp;Built with <i class=\"fas fa-heart\"></i> by Christopher B. Zenner. No rights reserved.&nbsp;&nbsp;&nbsp;<i className=\"fab fa-react fa-lg\"></i>\n        </div>\n        <div id=\"attribution\">\n          Jumbotron background pattern courtesy of <a href=\"https://dribbble.com/shots/6019214-Daily-UI-059/attachments\" target=\"_blank\" rel=\"noopener noreferrer\">Yvonne Cavero</a>. Fonts served by <a href=\"https://fonts.google.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Google Fonts</a>. <br />Pokémon images, including the Pokéball favicon and Pokéball background pattern, are copyrighted by their respective creators.\n        </div>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport './style.css';\n\nfunction Pokemon(props) {\n  return <img \n    id={props.id} \n    className=\"img-thumbnail\" \n    src={props.img} \n    alt={props.name} \n    clicked={props.clicked.toString()} \n    onClick={() => props.handleClick(\n      props.id, props.name, props.clicked)} \n  />;\n}\n\nexport default Pokemon;\n","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport Footer from './components/Footer';\nimport Pokemon from './components/Pokemon';\nimport pokemon from './data/pokemon.json';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = \n      this.resetGameState('Click a Pokémon to begin!', 0, 0);\n  }\n\n  /* \n     Thanks to Ilya Kantor at [The Modern JavaScript Tutorial][ref] for this most elegant shuffle method!\n\n     [ref](https://javascript.info/task/shuffle)\n  */\n  shuffle = (arr) => {\n    // Create a copy of the array parameter for immutability!\n    let shuffledArr = arr;\n\n    for (let i = shuffledArr.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n\n      [shuffledArr[i], shuffledArr[j]] = \n        [shuffledArr[j], shuffledArr[i]];\n    }\n\n    return shuffledArr;\n  }\n\n  handleClick = (id, name, clicked) => {\n    // DEBUG:\n    // console.log(`You clicked ${name}.`);\n\n    if (clicked) {\n      // ASSERT: User has already clicked this Pokémon;\n      //         therefore, they lose the game.\n      this.setState(\n        this.resetGameState(\n          `${name} has already been clicked. You lose!`,\n          this.state.game.score,\n          this.state.game.topScore\n      ));\n    } else {\n      // ASSERT: User has not already clicked this Pokémon;\n      //         therefore, their score increases by five points.\n      const updatedGame = this.handleScoreIncrease(name);\n      \n      if (this.state.game.score === this.state.pokemon.length * 5) {\n        this.setState(\n          this.resetGameState(\n            `CONGRATULATIONS! YOU WON THE GAME!!`,\n            this.state.game.score,\n            this.state.game.topScore\n        ));        \n      } else {\n        // 1. Set this Pokémon's clicked state to true\n        // 2. Shuffle \"the deck.\" \n        const pokemonArr = this.shuffle(\n          this.state.pokemon.map(pokemon =>\n          (pokemon.id === id) ?\n          Object.assign(pokemon, { clicked: true }) :\n          pokemon\n        ));\n  \n        this.setState({\n          pokemon: pokemonArr,\n          game: updatedGame\n        });\n      }\n    }\n  }\n\n  handleScoreIncrease = (pokemonName) => \n    Object.assign(\n      this.state.game, { \n        score: this.state.game.score + 5,\n        message: `${pokemonName} was an excellent choice!`\n      }\n    );\n\n  resetGameState = (userMsg, gameScore, userTopScore) => {\n    const pokemonArr = pokemon.map(pokemon => \n      Object.assign(pokemon, { clicked: false }));\n\n    return {\n      pokemon: pokemonArr,\n      game: {\n        message: userMsg,\n        score: 0,\n        topScore: Math.max(gameScore, userTopScore)\n      },\n    };\n  }\n\n  render() {\n    const pokemonImgs = this.state.pokemon.map(pokemon => \n      <Pokemon\n        id={pokemon.id}\n        key={pokemon.id}\n        name={pokemon.name}\n        img={pokemon.image}\n        clicked={pokemon.clicked}\n        handleClick={this.handleClick.bind(this)}\n      />\n    );\n\n    return (\n      <>\n        <Header \n          score={this.state.game.score}\n          topScore={this.state.game.topScore}\n          msg={this.state.game.message}\n        />\n        <Main>{pokemonImgs}</Main>\n        <Footer />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}